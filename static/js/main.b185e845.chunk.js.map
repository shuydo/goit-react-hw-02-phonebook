{"version":3,"sources":["Comps/Form/Form.js","Comps/Contacts/Contacts.jsx","App.js","index.js"],"names":["Form","state","name","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","type","onChange","style","marginLeft","Component","Contacts","dBase","map","el","id","App","contacts","appDBase","data","pState","nanoid","console","log","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAEqBA,E,4MACnBC,MAAQ,CACNC,KAAM,I,EAIRC,aAAe,SAACC,GACd,EAAKC,SAAL,eAAiBD,EAAEE,OAAOJ,KAAOE,EAAEE,OAAOC,S,EAG5CC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKV,OAEzB,EAAKI,SAAS,CAAEH,KAAM,M,4CAGxB,WACE,OACE,uBAAMS,SAAUC,KAAKJ,aAArB,UAEE,sCACA,uBACEK,KAAK,OACLX,KAAK,OACLK,MAAOK,KAAKX,MAAMC,KAClBY,SAAUF,KAAKT,eAajB,wBAAQU,KAAK,SAASE,MAAO,CAAEC,WAAY,IAA3C,gC,GAvC0BC,aCFnB,SAASC,EAAT,GAA8B,IAAVC,EAAS,EAATA,MAIjC,OACE,gCACE,0CACA,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,6BACE,4BAAIA,EAAGnB,QADAmB,EAAGC,Y,ICFDC,E,4MACnBtB,MAAQ,CACNuB,SAAU,I,EAGZC,SAAW,SAACC,GACV,EAAKrB,UAAS,SAACsB,GAAD,MAAa,CACzBH,SAAS,GAAD,mBACHG,EAAOH,UADJ,cAGJF,GAAIM,YAAO,KACRF,U,4CAMX,WAEE,OADAG,QAAQC,IAAI,MAAOlB,KAAKX,MAAMuB,UAE5B,qCACE,2CACA,cAAC,EAAD,CAAMb,SAAUC,KAAKa,WACrB,cAACP,EAAD,CAAUC,MAAOP,KAAKX,MAAMuB,kB,GAvBHO,IAAMd,WCDvCe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b185e845.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nexport default class Form extends Component {\n  state = {\n    name: \"\",\n    // phone: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    // this.setState({ name: \"\", phone: \"\" });\n    this.setState({ name: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        {/* <label> */}\n        <h3>Name</h3>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={this.state.name}\n          onChange={this.handleChange}\n        />\n        {/* </label> */}\n\n        {/* <label>\n          Phone\n          <input\n            type=\"text\"\n            name=\"phone\"\n            value={this.state.phone}\n            onChange={this.handleChange}\n          />\n        </label> */}\n        <button type=\"submit\" style={{ marginLeft: 10 }}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","export default function Contacts({ dBase }) {\n  // console.log(dBase);\n  // console.log(dBase[0].name);\n\n  return (\n    <div>\n      <h2>Contacts</h2>\n      <ul>\n        {dBase.map((el) => (\n          <li key={el.id}>\n            <p>{el.name}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\n// import { v4 as uuid } from \"uuid\";\nimport { nanoid } from \"nanoid\";\n\nimport Form from \"./Comps/Form/Form\";\nimport Contacts from \"./Comps/Contacts/Contacts\";\n\nexport default class App extends React.Component {\n  state = {\n    contacts: [],\n  };\n\n  appDBase = (data) => {\n    this.setState((pState) => ({\n      contacts: [\n        ...pState.contacts,\n        {\n          id: nanoid(10),\n          ...data,\n        },\n      ],\n    }));\n  };\n\n  render() {\n    console.log(\"---\", this.state.contacts);\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <Form onSubmit={this.appDBase} />\n        <Contacts dBase={this.state.contacts} />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css' Shu;\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals' Shu;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals() Shu;\n"],"sourceRoot":""}